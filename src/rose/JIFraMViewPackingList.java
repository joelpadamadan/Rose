/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package rose;

import java.awt.Font;
import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Betsy
 */
public class JIFraMViewPackingList extends javax.swing.JInternalFrame {

    DefaultTableModel model;
    Connection con = null;
    ResultSet rs = null;
    Statement stmt = null;
    String query = null, dd;
    int rowcount = 0;
    String[] schoolno;
    String year = new SimpleDateFormat("yyyy").format(new java.util.Date());

    public JIFraMViewPackingList() {
        try {
            initComponents();

            model = (DefaultTableModel) jtblPacking.getModel();
            con = new DBConnection().connect();
            stmt = con.createStatement();
            query = "select school_no,school_name from mst_school where flag !='D' and year(date_created)='" + Global.year + "'";
            rs = stmt.executeQuery(query);
            jcmbSchool.removeAllItems();
            jcmbSchool.addItem("");
            while (rs.next()) {
                jcmbSchool.addItem(rs.getString(1) + "   " + rs.getString(2));
            }
            jcmbFontSize.setSelectedItem("14");
            jtblPacking.setAutoCreateRowSorter(true);
            DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
            rightRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
            jtblPacking.getTableHeader().setDefaultRenderer(rightRenderer);
            jtblPacking.getColumn(jtblPacking.getColumnName(0)).setCellRenderer(rightRenderer);
            jtblPacking.getColumn(jtblPacking.getColumnName(1)).setCellRenderer(rightRenderer);
            jtblPacking.getColumn(jtblPacking.getColumnName(2)).setCellRenderer(rightRenderer);
            jtblPacking.getColumn(jtblPacking.getColumnName(3)).setCellRenderer(rightRenderer);
            jtblPacking.getColumn(jtblPacking.getColumnName(4)).setCellRenderer(rightRenderer);
            jtblPacking.setShowVerticalLines(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void populatetable() {
        try {
            rowcount = model.getRowCount();
            for (int i = 0; i < rowcount; i++) {
                model.removeRow(0);
            }
            con = new DBConnection().connect();
            stmt = con.createStatement();
            query = "select b.order_no,b.student_name,a.material_total,a.item_total,a.grand_total from trn_packing_list a join mst_student b on a.stsl_no = b.stsl_no where a.delivery_date = '" + dd + "' and b.school_no = '" + schoolno[0] + "' and a.flag!='D' and b.flag!='D'";
            System.out.println(query);
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                rowcount = model.getRowCount();
                model.addRow(new Object[]{});
                jtblPacking.setValueAt(rs.getString(1), rowcount, 0);
                jtblPacking.setValueAt(rs.getString(2), rowcount, 1);
                jtblPacking.setValueAt(rs.getString(3), rowcount, 2);
                jtblPacking.setValueAt(rs.getString(4), rowcount, 3);
                jtblPacking.setValueAt(rs.getString(5), rowcount, 4);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } finally {
            try {
                if (!rs.isClosed()) {
                    rs.close();
                }
                if (!con.isClosed()) {
                    con.close();
                }
                if (!stmt.isClosed()) {
                    stmt.isClosed();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblPacking = new javax.swing.JTable();
        jbtnShow = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jcmbDeliveryDate = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jcmbFontSize = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jcmbSchool = new javax.swing.JComboBox();

        setClosable(true);
        setTitle("View Packing List");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jtblPacking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order No.", "Name", "Material Total", "Item Total", "Grand Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtblPacking);
        jtblPacking.getColumnModel().getColumn(0).setPreferredWidth(70);
        jtblPacking.getColumnModel().getColumn(2).setPreferredWidth(100);
        jtblPacking.getColumnModel().getColumn(3).setPreferredWidth(100);
        jtblPacking.getColumnModel().getColumn(4).setPreferredWidth(100);

        jbtnShow.setText("Show");
        jbtnShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnShowActionPerformed(evt);
            }
        });

        jButton1.setText("Print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Delivery Dates");

        jcmbFontSize.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "8", "10", "12", "14", "16", "18", "20", "22", "24", "26" }));

        jLabel1.setText("Font Size");

        jLabel5.setText("School Name :");

        jcmbSchool.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcmbSchoolItemStateChanged(evt);
            }
        });
        jcmbSchool.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmbSchoolActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcmbSchool, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcmbDeliveryDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(103, 103, 103)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcmbFontSize, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnShow)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jcmbSchool, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jcmbFontSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jbtnShow)
                        .addComponent(jLabel2)
                        .addComponent(jcmbDeliveryDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnShowActionPerformed
        jtblPacking.setFont(new Font("Tahoma", Font.PLAIN, Integer.parseInt(jcmbFontSize.getSelectedItem().toString())));
        jtblPacking.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, Integer.parseInt(jcmbFontSize.getSelectedItem().toString())));
        jtblPacking.setRowHeight(Integer.parseInt(jcmbFontSize.getSelectedItem().toString()) + 5);
        rowcount = model.getRowCount();
        for (int i = 0; i < rowcount; i++) {
            model.removeRow(0);
        }
        if (jcmbDeliveryDate.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(this, "Please select a date", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                dd = jcmbDeliveryDate.getSelectedItem().toString();
                con = new DBConnection().connect();
                stmt = con.createStatement();
                query = "select a.stsl_no from trn_packing_list a join mst_student b on a.stsl_no = b.stsl_no where a.delivery_date = '" + dd + "' and b.school_no = '" + schoolno[0] + "' and a.flag!='D' and b.flag!='D'";
                System.out.println(query);
                rs = stmt.executeQuery(query);
                if (rs.next()) {
                    populatetable();
                } else {
                    JOptionPane.showMessageDialog(this, "No packing list exist for this delivery date", "Info", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_jbtnShowActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jtblPacking.getRowCount() > 0) {
            MessageFormat header = new MessageFormat("Packing List (" + Global.getSchoolname() + ") - " + new SimpleDateFormat("dd-MM-yy").format(Date.valueOf(jcmbDeliveryDate.getSelectedItem().toString())));
            MessageFormat footer = new MessageFormat("Page {0,number,integer}");
            try {
                jtblPacking.print(JTable.PrintMode.FIT_WIDTH, header, footer);
            } catch (java.awt.print.PrinterException e) {
                System.err.format("Cannot print %s%n", e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jcmbSchoolItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcmbSchoolItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (jcmbSchool.getSelectedItem() == null || jcmbSchool.getSelectedItem().equals("")) {
                jcmbDeliveryDate.removeAllItems();
            } else {
                try {
                    con = new DBConnection().connect();
                    stmt = con.createStatement();
                    schoolno = jcmbSchool.getSelectedItem().toString().split("   ");
                    query = "select DISTINCT(a.delivery_date) from trn_packing_list a join mst_student b on a.stsl_no = b.stsl_no where b.school_no = '" + schoolno[0] + "' and a.flag!='D' and b.flag!='D'";
                    rs = stmt.executeQuery(query);
                    jcmbDeliveryDate.removeAllItems();
                    jcmbDeliveryDate.addItem("");
                    while (rs.next()) {
                        jcmbDeliveryDate.addItem(rs.getString(1));
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                } finally {
                    try {
                        if (!rs.isClosed()) {
                            rs.close();
                        }
                        if (!con.isClosed()) {
                            con.close();
                        }
                        if (!stmt.isClosed()) {
                            stmt.isClosed();
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    }
                }
            }
        }
    }//GEN-LAST:event_jcmbSchoolItemStateChanged

    private void jcmbSchoolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmbSchoolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcmbSchoolActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnShow;
    private javax.swing.JComboBox jcmbDeliveryDate;
    private javax.swing.JComboBox jcmbFontSize;
    private javax.swing.JComboBox jcmbSchool;
    private javax.swing.JTable jtblPacking;
    // End of variables declaration//GEN-END:variables
}
