/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package rose;

import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Joel
 */
public class JIFraEditMaterialConsumption extends javax.swing.JInternalFrame {

    String text;
    DefaultTableModel model1;
    Connection con = null;
    ResultSet rs = null;
    Statement stmt = null;
    String query = null;
    String[] orderno, itemno, materialno;
    int rowcount = 0, stsl = 0, slno = 0;
    String today = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
    boolean check;

    public JIFraEditMaterialConsumption() {
        try {
            initComponents();
            model1 = (DefaultTableModel) jtblMaterial.getModel();
            con = new DBConnection().connect();
            stmt = con.createStatement();
            query = "select distinct(a.stsl_no),b.order_no,b.student_name from mst_student_mat_detail a join mst_student b on a.stsl_no = b.stsl_no where b.school_no = '" + Global.getSchoolno() + "' and a.flag!='D' and b.flag!='D'";
            rs = stmt.executeQuery(query);
            jcmbOrderNo.addItem("");
            while (rs.next()) {
                jcmbOrderNo.addItem(rs.getString(2) + "   " + rs.getString(3));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } finally {
            try {
                if (!rs.isClosed()) {
                    rs.close();
                }
                if (!con.isClosed()) {
                    con.close();
                }
                if (!stmt.isClosed()) {
                    stmt.isClosed();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jcmbOrderNo = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtblMaterial = new javax.swing.JTable();
        jbtnEdit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jtxtItem = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtxtMaterial = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtxtRC = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtxtFC = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jtblDelete = new javax.swing.JButton();

        setClosable(true);
        setTitle("Edit Material Consumption");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setText("Order No.");

        jcmbOrderNo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcmbOrderNoItemStateChanged(evt);
            }
        });

        jtblMaterial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Item", "Material", "Tailor Consumption", "School Consumption"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtblMaterial);
        jtblMaterial.getColumnModel().getColumn(0).setMinWidth(0);
        jtblMaterial.getColumnModel().getColumn(0).setPreferredWidth(0);
        jtblMaterial.getColumnModel().getColumn(0).setMaxWidth(0);
        jtblMaterial.getColumnModel().getColumn(3).setMinWidth(110);
        jtblMaterial.getColumnModel().getColumn(3).setPreferredWidth(110);
        jtblMaterial.getColumnModel().getColumn(3).setMaxWidth(110);
        jtblMaterial.getColumnModel().getColumn(4).setMinWidth(110);
        jtblMaterial.getColumnModel().getColumn(4).setPreferredWidth(110);
        jtblMaterial.getColumnModel().getColumn(4).setMaxWidth(110);

        jbtnEdit.setText("Edit");
        jbtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEditActionPerformed(evt);
            }
        });

        jLabel2.setText("Item");

        jtxtItem.setEditable(false);

        jLabel3.setText("Material");

        jtxtMaterial.setEditable(false);

        jLabel4.setText("Tailor Consumption");

        jtxtRC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtRCKeyPressed(evt);
            }
        });

        jLabel5.setText("School Consumption");

        jtxtFC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtFCKeyPressed(evt);
            }
        });

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jtblDelete.setText("Delete");
        jtblDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtblDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jcmbOrderNo, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jbtnEdit)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jtblDelete)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtItem, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtRC, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtFC, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcmbOrderNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnEdit)
                    .addComponent(jtblDelete))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxtItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jtxtMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtxtRC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jtxtFC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void populatematerialtable(int orderno) {
        try {
            rowcount = jtblMaterial.getRowCount();
            for (int i = 0; i < rowcount; i++) {
                model1.removeRow(0);
            }
            con = new DBConnection().connect();
            stmt = con.createStatement();
            query = "select a.sl_no,c.item_name,b.material_name,a.actual_mat_length,a.fixed_mat_length from mst_student_mat_detail a join mst_material b on a.material_no = b.material_no join mst_item c on a.item_no = c.item_no where a.stsl_no = '" + orderno + "' and a.flag!='D' and b.flag!='D' and c.flag!='D';";
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                rowcount = jtblMaterial.getRowCount();
                model1.addRow(new Object[]{""});
                jtblMaterial.setValueAt(rs.getString(1), rowcount, 0);
                jtblMaterial.setValueAt(rs.getString(2), rowcount, 1);
                jtblMaterial.setValueAt(rs.getString(3), rowcount, 2);
                jtblMaterial.setValueAt(rs.getString(4), rowcount, 3);
                jtblMaterial.setValueAt(rs.getString(5), rowcount, 4);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } finally {
            try {
                if (!rs.isClosed()) {
                    rs.close();
                }
                if (!con.isClosed()) {
                    con.close();
                }
                if (!stmt.isClosed()) {
                    stmt.isClosed();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }
    private void jcmbOrderNoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcmbOrderNoItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            rowcount = jtblMaterial.getRowCount();
            for (int i = 0; i < rowcount; i++) {
                model1.removeRow(0);
            }
            jtxtFC.setText("");
            jtxtRC.setText("");
            jtxtItem.setText("");
            jtxtMaterial.setText("");
            if (!jcmbOrderNo.getSelectedItem().equals("")) {
                try {
                    con = new DBConnection().connect();
                    stmt = con.createStatement();
                    orderno = jcmbOrderNo.getSelectedItem().toString().split("   ");
                    query = "select stsl_no,class_no from mst_student where order_no ='" + orderno[0] + "' and school_no = '" + Global.getSchoolno() + "' and flag!= 'D' ";
                    rs = stmt.executeQuery(query);
                    if (rs.next()) {
                        stsl = rs.getInt(1);
                    }
                    populatematerialtable(stsl);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                } finally {
                    try {
                        if (!rs.isClosed()) {
                            rs.close();
                        }
                        if (!con.isClosed()) {
                            con.close();
                        }
                        if (!stmt.isClosed()) {
                            stmt.isClosed();
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    }
                }
            }
        }
    }//GEN-LAST:event_jcmbOrderNoItemStateChanged

    private void jbtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEditActionPerformed
        if (jtblMaterial.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a record from the table to edit", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else {
            slno = Integer.parseInt(jtblMaterial.getValueAt(jtblMaterial.getSelectedRow(), 0).toString());
            jtxtItem.setText(jtblMaterial.getValueAt(jtblMaterial.getSelectedRow(), 1).toString());
            jtxtMaterial.setText(jtblMaterial.getValueAt(jtblMaterial.getSelectedRow(), 2).toString());
            jtxtRC.setText(jtblMaterial.getValueAt(jtblMaterial.getSelectedRow(), 3).toString());
            jtxtFC.setText(jtblMaterial.getValueAt(jtblMaterial.getSelectedRow(), 4).toString());
        }
    }//GEN-LAST:event_jbtnEditActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (slno == 0) {
            JOptionPane.showMessageDialog(this, "Please select a record from the table to edit", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else if (jtxtMaterial.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please select a record from the table to edit", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else if (jtxtItem.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please select a record from the table to edit", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else if (jtxtRC.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter the real consumption amount", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else if (jtxtFC.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter the fixed consumption amount", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int b = JOptionPane.showConfirmDialog(this, "Do you want to save this info?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (b == JOptionPane.YES_OPTION) {
                try {
                    con = new DBConnection().connect();
                    con.setAutoCommit(false);
                    stmt = con.createStatement();
                    orderno = jcmbOrderNo.getSelectedItem().toString().split("   ");
                    query = "select stsl_no,class_no from mst_student where order_no ='" + orderno[0] + "' and school_no = '" + Global.getSchoolno() + "' and flag!= 'D' ";
                    rs = stmt.executeQuery(query);
                    if (rs.next()) {
                        stsl = rs.getInt(1);
                    }
                    query = "update mst_student_mat_detail set fixed_mat_length='" + jtxtFC.getText().trim() + "',actual_mat_length='" + jtxtRC.getText().trim() + "',flag='I',date_updated = '" + today + "' where sl_no = '" + slno + "' ";
                    int i = stmt.executeUpdate(query);
                    if (i > 0) {
                        con.commit();
                        JOptionPane.showMessageDialog(this, "Update Successfull!", "Info", JOptionPane.INFORMATION_MESSAGE);
                        populatematerialtable(stsl);
                        jtxtFC.setText("");
                        jtxtRC.setText("");
                        jtxtItem.setText("");
                        jtxtMaterial.setText("");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                } finally {
                    try {
                        if (!rs.isClosed()) {
                            rs.close();
                        }
                        if (!con.isClosed()) {
                            con.close();
                        }
                        if (!stmt.isClosed()) {
                            stmt.isClosed();
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jtxtRCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtRCKeyPressed
        text = "";
        text = jtxtRC.getText();
        if (text.length() == 6) {
            jtxtRC.setEditable(false);
            if (evt.getKeyChar() == evt.VK_BACK_SPACE || evt.getKeyChar() == evt.VK_DELETE || evt.getKeyChar() == evt.VK_LEFT || evt.getKeyChar() == evt.VK_RIGHT) {
                jtxtRC.setEditable(true);
            }
        } else if (evt.getKeyChar() >= evt.VK_0 && evt.getKeyChar() <= evt.VK_9 || evt.getKeyChar() == evt.VK_BACK_SPACE || evt.getKeyChar() == evt.VK_DELETE || evt.getKeyChar() == evt.VK_LEFT || evt.getKeyChar() == evt.VK_RIGHT || evt.getKeyChar() == evt.VK_PERIOD) {
            jtxtRC.setEditable(true);
        } else {
            jtxtRC.setEditable(false);
        }
    }//GEN-LAST:event_jtxtRCKeyPressed

    private void jtxtFCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtFCKeyPressed
        text = "";
        text = jtxtFC.getText();
        if (text.length() == 6) {
            jtxtFC.setEditable(false);
            if (evt.getKeyChar() == evt.VK_BACK_SPACE || evt.getKeyChar() == evt.VK_DELETE || evt.getKeyChar() == evt.VK_LEFT || evt.getKeyChar() == evt.VK_RIGHT) {
                jtxtFC.setEditable(true);
            }
        } else if (evt.getKeyChar() >= evt.VK_0 && evt.getKeyChar() <= evt.VK_9 || evt.getKeyChar() == evt.VK_BACK_SPACE || evt.getKeyChar() == evt.VK_DELETE || evt.getKeyChar() == evt.VK_LEFT || evt.getKeyChar() == evt.VK_RIGHT || evt.getKeyChar() == evt.VK_PERIOD) {
            jtxtFC.setEditable(true);
        } else {
            jtxtFC.setEditable(false);
        }
    }//GEN-LAST:event_jtxtFCKeyPressed

    private void jtblDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtblDeleteActionPerformed
        if (jtblMaterial.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a record from the table to edit", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int b = JOptionPane.showConfirmDialog(this, "Do you want to delete this record?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (b == JOptionPane.YES_OPTION) {
                try {
                    con = new DBConnection().connect();
                    con.setAutoCommit(false);
                    stmt = con.createStatement();
                    slno = Integer.parseInt(jtblMaterial.getValueAt(jtblMaterial.getSelectedRow(), 0).toString());
                    orderno = jcmbOrderNo.getSelectedItem().toString().split("   ");
                    query = "select stsl_no,class_no from mst_student where order_no ='" + orderno[0] + "' and school_no = '" + Global.getSchoolno() + "' and flag!= 'D' ";
                    rs = stmt.executeQuery(query);
                    if (rs.next()) {
                        stsl = rs.getInt(1);
                    }
                    query = "update mst_student_mat_detail set flag='D',date_updated = '" + today + "' where sl_no = '" + slno + "' ";
                    int i = stmt.executeUpdate(query);
                    if (i > 0) {
                        con.commit();
                        JOptionPane.showMessageDialog(this, "Update Successfull!", "Info", JOptionPane.INFORMATION_MESSAGE);
                        populatematerialtable(stsl);
                        jtxtFC.setText("");
                        jtxtRC.setText("");
                        jtxtItem.setText("");
                        jtxtMaterial.setText("");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                } finally {
                    try {
                        if (!rs.isClosed()) {
                            rs.close();
                        }
                        if (!con.isClosed()) {
                            con.close();
                        }
                        if (!stmt.isClosed()) {
                            stmt.isClosed();
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    }
                }
            }
        }
    }//GEN-LAST:event_jtblDeleteActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnEdit;
    private javax.swing.JComboBox jcmbOrderNo;
    private javax.swing.JButton jtblDelete;
    private javax.swing.JTable jtblMaterial;
    private javax.swing.JTextField jtxtFC;
    private javax.swing.JTextField jtxtItem;
    private javax.swing.JTextField jtxtMaterial;
    private javax.swing.JTextField jtxtRC;
    // End of variables declaration//GEN-END:variables
}
