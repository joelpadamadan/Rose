/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package rose;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Joel
 */
public class JIFraViewProfit extends javax.swing.JInternalFrame {

    Connection con;
    Statement stmt;
    Statement stmt1;
    ResultSet rs;
    ResultSet rs1;
     
    String query;
    DefaultTableModel model1;
    int rowcount = 0;
    double gt;

    public JIFraViewProfit() {
        try {
            initComponents();
            model1 = (DefaultTableModel) jtblProfit.getModel();
            con = new DBConnection().connect();
            stmt = con.createStatement();
            stmt1 = con.createStatement();
            query = "select school_no,school_name from mst_school where school_year = '" + Global.year + "' and flag!='D'";
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                rowcount = jtblProfit.getRowCount();
                model1.addRow(new Object[]{""});
                jtblProfit.setValueAt(rs.getString(2), rowcount, 0);
                query = "select sum(a.fixed_mat_length*e.selling_price*f.qty) as sp,sum(a.actual_mat_length*c.cost_price*f.qty) as cp,  sum((a.fixed_mat_length*e.selling_price*f.qty)-(a.actual_mat_length*c.cost_price*f.qty)) as profit from mst_student_mat_detail a join mst_item b on a.item_no = b.item_no join mst_material c on a.material_no = c.material_no join mst_school_mat_price e on a.material_no = e.material_no and a.item_no = e.item_no join mst_student_detail f on a.stsl_no = f.stsl_no and a.item_no = f.item_no where  e.school_no = '" + rs.getString(1) + "' and a.flag!='D' and b.flag!='D' and c.flag!='D' and e.flag!='D'";
                rs1 = stmt1.executeQuery(query);
                if (rs1.next()) {
                    jtblProfit.setValueAt(rs1.getDouble(3), rowcount, 1);
                }
                query = "select sum(a.qty*c.selling_price) as cp,sum(a.qty*(d.cutting_charge+d.stitching_charge+d.button_charge+d.ironing_charge+d.material_extra)+d.packing_charge) as sp,sum((a.qty*c.selling_price)-(a.qty*(d.cutting_charge+d.stitching_charge+d.button_charge+d.ironing_charge+d.material_extra)+d.packing_charge)) as profit from mst_student_detail a join mst_item b on a.item_no = b.item_no join mst_school_item_price c on a.item_no = c.item_no join mst_item_detail d on a.item_no = d.item_no where c.school_no = '" + rs.getString(1) + "' and a.flag!='D' and b.flag!='D' and d.flag!='D' and c.flag!='D'";
                rs1 = stmt1.executeQuery(query);
                if (rs1.next()) {
                    jtblProfit.setValueAt(rs1.getDouble(3), rowcount, 2);
                }
                jtblProfit.setValueAt(Double.parseDouble(jtblProfit.getValueAt(rowcount, 1).toString()) + Double.parseDouble(jtblProfit.getValueAt(rowcount, 2).toString()), rowcount, 3);
                gt = gt + Double.parseDouble(jtblProfit.getValueAt(rowcount, 3).toString());
            }
            jtxtGrossProfit.setText(String.valueOf(gt));
            query = "select sum(amount) from mst_expense where extract(year from expense_date)='" + Global.year + "' and flag!='D'";
            rs = stmt.executeQuery(query);
            if (rs.next()) {
                jtxtExpense.setText(rs.getString(1));

            }
            if (!jtxtExpense.getText().equals("")) {
                jtxtNetProfit.setText(String.valueOf(Double.parseDouble(jtxtGrossProfit.getText()) - Double.parseDouble(jtxtExpense.getText())));
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } finally {
            try {
                if (!rs.isClosed()) {
                    rs.close();
                }
                if (!con.isClosed()) {
                    con.close();
                }
                if (!stmt.isClosed()) {
                    stmt.isClosed();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtblProfit = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jtxtGrossProfit = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtxtExpense = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtxtNetProfit = new javax.swing.JTextField();

        setClosable(true);
        setTitle("View Profit");

        jtblProfit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "School Name", "Profit from Material", "Profit from Uniform", "Total Profit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtblProfit);
        jtblProfit.getColumnModel().getColumn(1).setMinWidth(120);
        jtblProfit.getColumnModel().getColumn(1).setPreferredWidth(120);
        jtblProfit.getColumnModel().getColumn(1).setMaxWidth(120);
        jtblProfit.getColumnModel().getColumn(2).setMinWidth(120);
        jtblProfit.getColumnModel().getColumn(2).setPreferredWidth(120);
        jtblProfit.getColumnModel().getColumn(2).setMaxWidth(120);
        jtblProfit.getColumnModel().getColumn(3).setMinWidth(110);
        jtblProfit.getColumnModel().getColumn(3).setPreferredWidth(110);
        jtblProfit.getColumnModel().getColumn(3).setMaxWidth(110);

        jLabel1.setText("Gross profit");

        jtxtGrossProfit.setEditable(false);

        jLabel2.setText("Total Expense");

        jtxtExpense.setEditable(false);

        jLabel3.setText("Net Profit after expense");

        jtxtNetProfit.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtxtNetProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26)
                        .addComponent(jtxtGrossProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jtxtExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxtGrossProfit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxtExpense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxtNetProfit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtblProfit;
    private javax.swing.JTextField jtxtExpense;
    private javax.swing.JTextField jtxtGrossProfit;
    private javax.swing.JTextField jtxtNetProfit;
    // End of variables declaration//GEN-END:variables
}
