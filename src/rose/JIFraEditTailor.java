/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package rose;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Joel
 */
public class JIFraEditTailor extends javax.swing.JInternalFrame {

    /**
     * Creates new form JIFraEditTailor
     */
    String text = null;
    DefaultTableModel model1;
    Connection con = null;
    ResultSet rs = null;
    Statement stmt = null;
    String query = null;
    String tailor_no;
    int rowcount = 0;
     

    public JIFraEditTailor() {
        initComponents();
        model1 = (DefaultTableModel) jtblTailor.getModel();
        popoulatetailor();
    }

    private void popoulatetailor() {
        try {
            rowcount = jtblTailor.getRowCount();
            for (int i = 0; i < rowcount; i++) {
                model1.removeRow(0);
            }
            con = new DBConnection().connect();
            stmt = con.createStatement();
            query = "select tailor_no,tailor_name,tailor_code from mst_tailor where flag!='D' and year(date_created)='" + Global.year + "'";
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                rowcount = jtblTailor.getRowCount();
                model1.addRow(new Object[]{""});
                jtblTailor.setValueAt(rs.getString(1), rowcount, 0);
                jtblTailor.setValueAt(rs.getString(2), rowcount, 1);
                jtblTailor.setValueAt(rs.getString(3), rowcount, 2);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } finally {
            try {
                if (!rs.isClosed()) {
                    rs.close();
                }
                if (!con.isClosed()) {
                    con.close();
                }
                if (!stmt.isClosed()) {
                    stmt.isClosed();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtblTailor = new javax.swing.JTable();
        jBtnDelete1 = new javax.swing.JButton();

        setClosable(true);
        setTitle("Delete Tailor");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jtblTailor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tailor No.", "Tailor Name", "Tailor Code"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtblTailor);
        jtblTailor.getColumnModel().getColumn(0).setMinWidth(0);
        jtblTailor.getColumnModel().getColumn(0).setPreferredWidth(0);
        jtblTailor.getColumnModel().getColumn(0).setMaxWidth(0);
        jtblTailor.getColumnModel().getColumn(2).setMaxWidth(100);

        jBtnDelete1.setText("Delete");
        jBtnDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDelete1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnDelete1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jBtnDelete1)
                        .addGap(0, 230, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDelete1ActionPerformed
        if (jtblTailor.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a tailor to delete", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int k = JOptionPane.showConfirmDialog(this, "Do you want to delete the tailor?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (k == JOptionPane.YES_OPTION) {
                try {
                    int i = 0;
                    tailor_no = jtblTailor.getValueAt(jtblTailor.getSelectedRow(), 0).toString();
                    con = new DBConnection().connect();
                    con.setAutoCommit(false);
                    stmt = con.createStatement();
                    query = "update mst_tailor set flag='D' where tailor_no='" + tailor_no + "'";
                    i = i + stmt.executeUpdate(query);
                    if (i > 0) {
                        con.commit();
                        JOptionPane.showMessageDialog(this, "Delete Successfull!", "Info", JOptionPane.INFORMATION_MESSAGE);
                        popoulatetailor();
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                } finally {
                    try {
                        if (!con.isClosed()) {
                            con.close();
                        }
                        if (!stmt.isClosed()) {
                            stmt.isClosed();
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    }
                }
            }
        }
    }//GEN-LAST:event_jBtnDelete1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnDelete1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jtblTailor;
    // End of variables declaration//GEN-END:variables
}
