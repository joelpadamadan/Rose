/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package rose;

import com.mysql.jdbc.PreparedStatement;
import java.awt.event.ItemEvent;
import java.beans.PropertyVetoException;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import javax.swing.JOptionPane;

/**
 *
 * @author Joel
 */
public class JIFraOrderListReport extends javax.swing.JInternalFrame {

    /**
     * Creates new form JIFraOrderListReport
     */
    Connection con = null;
    ResultSet rs = null;
    Statement stmt = null;
    String query = null;
    String school_no[], order_no[];
    PreparedStatement pstmt = null;
    String projectpath;

    public JIFraOrderListReport() {
        initComponents();
        try {
            projectpath = new File(".").getCanonicalPath();
            con = new DBConnection().connect();
            query = "select distinct(school_year) from mst_school where flag!='D'";
            stmt = con.createStatement();
            rs = stmt.executeQuery(query);
            jcmbYear.removeAllItems();
            jcmbYear.addItem("");
            while (rs.next()) {
                jcmbYear.addItem(rs.getString(1));
            }
        } catch (SQLException | IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (!rs.isClosed()) {
                    rs.close();
                }
                if (!con.isClosed()) {
                    con.close();
                }
                if (!stmt.isClosed()) {
                    stmt.isClosed();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jcmbYear = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jcmbSchool = new javax.swing.JComboBox();
        jcmbGenerate = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();

        setClosable(true);
        setTitle("Order List");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setText("Year");

        jcmbYear.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcmbYearItemStateChanged(evt);
            }
        });

        jLabel2.setText("School");

        jcmbSchool.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));

        jcmbGenerate.setText("Generate");
        jcmbGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmbGenerateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcmbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcmbSchool, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 193, Short.MAX_VALUE)
                .addComponent(jcmbGenerate)
                .addGap(39, 39, 39))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcmbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jcmbSchool, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcmbGenerate))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jDesktopPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcmbYearItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcmbYearItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (jcmbYear.getSelectedItem() != "") {
                try {
                    con = new DBConnection().connect();
                    stmt = con.createStatement();
                    query = "select school_no,school_name from mst_school where school_year = '" + jcmbYear.getSelectedItem().toString() + "' and flag!='D'";
                    rs = stmt.executeQuery(query);
                    jcmbSchool.removeAllItems();
                    jcmbSchool.addItem("");
                    while (rs.next()) {
                        jcmbSchool.addItem(rs.getString(1) + "   " + rs.getString(2));
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                } finally {
                    try {
                        if (!rs.isClosed()) {
                            rs.close();
                        }
                        if (!con.isClosed()) {
                            con.close();
                        }
                        if (!stmt.isClosed()) {
                            stmt.isClosed();
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    }
                }
            }
        }
    }//GEN-LAST:event_jcmbYearItemStateChanged

    private void jcmbGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmbGenerateActionPerformed
        if (jcmbYear.getSelectedItem() == "") {
            JOptionPane.showMessageDialog(this, "Please select a year", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else if (jcmbSchool.getSelectedItem() == "") {
            JOptionPane.showMessageDialog(this, "Please select a school name", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                school_no = jcmbSchool.getSelectedItem().toString().split("   ");
                HashMap Param = new HashMap();
                Param.put("schoolNo", school_no[0]);
                JIFraNewReportViewer viewer = new JIFraNewReportViewer(projectpath + "/Reports/OrderList.jrxml", Param);                
                jDesktopPane1.removeAll();
                jDesktopPane1.add(viewer);
                viewer.setVisible(true);
                viewer.setMaximum(true);
            } catch (PropertyVetoException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jcmbGenerateActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jcmbGenerate;
    private javax.swing.JComboBox jcmbSchool;
    private javax.swing.JComboBox jcmbYear;
    // End of variables declaration//GEN-END:variables
}
