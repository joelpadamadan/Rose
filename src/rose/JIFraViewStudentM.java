/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package rose;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Joel
 */
public class JIFraViewStudentM extends javax.swing.JInternalFrame {

    /**
     * Creates new form JIFraViewStudentM
     */
    Connection con;
    Statement stmt;
    ResultSet rs;
    String query, orderno, text;
    String[] schoolno;
    DefaultTableModel model1;
    DefaultTableModel model2;
    DefaultTableModel model3;
    int selectedrow = 0, slno = 0, rowcount = 0, stsl = 0;
    float gt = 0, item_total = 0, material_total = 0, material_price = 0, diff = 0;
    String today = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
     
    boolean pending = false;

    public JIFraViewStudentM() {
        try {
            initComponents();
            model1 = (DefaultTableModel) jtblMaterialPurchased.getModel();
            model2 = (DefaultTableModel) jtblItemQuantity.getModel();
            model3 = (DefaultTableModel) jtblWorkInProgress.getModel();
            jdtePacking.setDate(new Date());
            query = "select school_no,school_name from mst_school where flag !='D'  and year(date_created)='"+Global.year+"'";
            con = new DBConnection().connect();
            stmt = con.createStatement();
            rs = stmt.executeQuery(query);
            jcmbSchool.removeAllItems();
            jcmbSchool.addItem("");
            while (rs.next()) {
                jcmbSchool.addItem(rs.getString(1) + "   " + rs.getString(2));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } finally {
            try {
                if (!rs.isClosed()) {
                    rs.close();
                }
                if (!con.isClosed()) {
                    con.close();
                }
                if (!stmt.isClosed()) {
                    stmt.isClosed();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtxtStudentName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtxtClass = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtxtDivision = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtxtPhone = new javax.swing.JTextField();
        jtxtGender = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jtxtOrderNo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jtxtGrandTotal = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jcmbSchool = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jtxtMaterialTotal = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jtxtItemTotal = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblShirt = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtblPant = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtblSkirt = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtblCoat = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jtblMaterialPurchased = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtblItemQuantity = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jtblWorkInProgress = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jdtePacking = new com.toedter.calendar.JDateChooser();
        jbtnAddToPacking = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setClosable(true);
        setIconifiable(true);
        setTitle("Student Details");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel2.setText("Student Name:");

        jtxtStudentName.setEditable(false);

        jLabel3.setText("Gender:");

        jLabel4.setText("Class:");

        jtxtClass.setEditable(false);

        jLabel5.setText("Division:");

        jtxtDivision.setEditable(false);

        jLabel6.setText("Phone No.:");

        jtxtPhone.setEditable(false);

        jtxtGender.setEditable(false);

        jLabel7.setText("Order No.:");

        jButton1.setText("Show");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jtxtOrderNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtOrderNoKeyPressed(evt);
            }
        });

        jLabel8.setText("Grand Total:");

        jtxtGrandTotal.setEditable(false);

        jLabel1.setText("School");

        jLabel14.setText("Material Total:");

        jtxtMaterialTotal.setEditable(false);

        jLabel15.setText("Item Total :");

        jtxtItemTotal.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtxtStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtxtGender, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel1))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcmbSchool, 0, 313, Short.MAX_VALUE)
                            .addComponent(jtxtOrderNo))
                        .addGap(19, 19, 19)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtMaterialTotal))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtClass, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtxtDivision, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtGrandTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtItemTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcmbSchool, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jButton1)
                    .addComponent(jtxtOrderNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtxtStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(jtxtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jtxtClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(jtxtDivision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jtxtGrandTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jtxtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jtxtMaterialTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jtxtItemTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Measurement"));

        jtblShirt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Shirt Length", "Shirt Shoulder", "Shirt Chest", "Shirt Sleeve Length", "Shirt Sleeve Loose", "Shirt Collar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblShirt.setFocusable(false);
        jScrollPane1.setViewportView(jtblShirt);

        jLabel9.setText("Shirt");

        jLabel10.setText("Pant");

        jtblPant.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Pant Length", "Pant Inside", "Pant Knee Length", "Pant Knee Loose", "Pant Waist", "Pant Seat", "Pant Bootom Loose"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtblPant);
        jtblPant.getColumnModel().getColumn(0).setMinWidth(80);
        jtblPant.getColumnModel().getColumn(0).setPreferredWidth(80);
        jtblPant.getColumnModel().getColumn(0).setMaxWidth(80);
        jtblPant.getColumnModel().getColumn(1).setMinWidth(80);
        jtblPant.getColumnModel().getColumn(1).setPreferredWidth(80);
        jtblPant.getColumnModel().getColumn(1).setMaxWidth(80);
        jtblPant.getColumnModel().getColumn(4).setMinWidth(80);
        jtblPant.getColumnModel().getColumn(4).setPreferredWidth(80);
        jtblPant.getColumnModel().getColumn(4).setMaxWidth(80);
        jtblPant.getColumnModel().getColumn(5).setMinWidth(80);
        jtblPant.getColumnModel().getColumn(5).setPreferredWidth(80);
        jtblPant.getColumnModel().getColumn(5).setMaxWidth(80);

        jtblSkirt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Yok", "Length", "Waist", "Shoulder"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jtblSkirt);

        jLabel11.setText("Skirt / Pinnafore");

        jLabel12.setText("Coat");

        jtblCoat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Coat Length", "Coat Shoulder", "Coat Chest", "Coat Waist", "Coat Seat"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jtblCoat);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Material Purchased"));

        jtblMaterialPurchased.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Material Name", "Material Quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jtblMaterialPurchased);
        jtblMaterialPurchased.getColumnModel().getColumn(2).setMinWidth(110);
        jtblMaterialPurchased.getColumnModel().getColumn(2).setPreferredWidth(110);
        jtblMaterialPurchased.getColumnModel().getColumn(2).setMaxWidth(110);
        jtblMaterialPurchased.getColumnModel().getColumn(3).setMinWidth(60);
        jtblMaterialPurchased.getColumnModel().getColumn(3).setPreferredWidth(60);
        jtblMaterialPurchased.getColumnModel().getColumn(3).setMaxWidth(60);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Item Quantity"));

        jtblItemQuantity.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Qty", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jtblItemQuantity);
        jtblItemQuantity.getColumnModel().getColumn(1).setMinWidth(50);
        jtblItemQuantity.getColumnModel().getColumn(1).setPreferredWidth(50);
        jtblItemQuantity.getColumnModel().getColumn(1).setMaxWidth(50);
        jtblItemQuantity.getColumnModel().getColumn(2).setMinWidth(60);
        jtblItemQuantity.getColumnModel().getColumn(2).setPreferredWidth(60);
        jtblItemQuantity.getColumnModel().getColumn(2).setMaxWidth(60);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Work in progress"));

        jtblWorkInProgress.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Section", "Master Name", "Item Name", "Status", "Quantity", "Date Given", "Date Recieved"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(jtblWorkInProgress);
        jtblWorkInProgress.getColumnModel().getColumn(0).setMinWidth(150);
        jtblWorkInProgress.getColumnModel().getColumn(0).setPreferredWidth(150);
        jtblWorkInProgress.getColumnModel().getColumn(0).setMaxWidth(150);
        jtblWorkInProgress.getColumnModel().getColumn(3).setMinWidth(60);
        jtblWorkInProgress.getColumnModel().getColumn(3).setPreferredWidth(60);
        jtblWorkInProgress.getColumnModel().getColumn(3).setMaxWidth(60);
        jtblWorkInProgress.getColumnModel().getColumn(4).setMinWidth(60);
        jtblWorkInProgress.getColumnModel().getColumn(4).setPreferredWidth(60);
        jtblWorkInProgress.getColumnModel().getColumn(4).setMaxWidth(60);
        jtblWorkInProgress.getColumnModel().getColumn(5).setMinWidth(100);
        jtblWorkInProgress.getColumnModel().getColumn(5).setPreferredWidth(100);
        jtblWorkInProgress.getColumnModel().getColumn(5).setMaxWidth(100);
        jtblWorkInProgress.getColumnModel().getColumn(6).setMinWidth(100);
        jtblWorkInProgress.getColumnModel().getColumn(6).setPreferredWidth(100);
        jtblWorkInProgress.getColumnModel().getColumn(6).setMaxWidth(100);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Packing List"));

        jbtnAddToPacking.setText("Add To Packing List");
        jbtnAddToPacking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAddToPackingActionPerformed(evt);
            }
        });

        jLabel13.setText("Delivery Date");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jdtePacking, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jbtnAddToPacking)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtnAddToPacking)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel13)
                        .addComponent(jdtePacking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void clear() {

        jtxtStudentName.setText("");
        jtxtGender.setText("");
        jtxtClass.setText("");
        jtxtDivision.setText("");
        jtxtPhone.setText("");
        jdtePacking.setDate(new Date());
        for (int i = 0; i < 6; i++) {
            jtblShirt.setValueAt(null, 0, i);
        }
        for (int i = 0; i < 6; i++) {
            jtblPant.setValueAt(null, 0, i);
        }
        for (int i = 0; i < 3; i++) {
            jtblSkirt.setValueAt(null, 0, i);
        }
        for (int i = 0; i < 5; i++) {
            jtblCoat.setValueAt(null, 0, i);
        }
        rowcount = jtblMaterialPurchased.getRowCount();
        for (int i = 0; i < rowcount; i++) {
            model1.removeRow(0);
        }
        rowcount = jtblItemQuantity.getRowCount();
        for (int i = 0; i < rowcount; i++) {
            model2.removeRow(0);
        }
        rowcount = jtblWorkInProgress.getRowCount();
        for (int i = 0; i < rowcount; i++) {
            model3.removeRow(0);
        }

    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (!jtxtOrderNo.getText().equals("")) {
            try {
                con = new DBConnection().connect();
                stmt = con.createStatement();
                orderno = jtxtOrderNo.getText().trim();
                schoolno = jcmbSchool.getSelectedItem().toString().split("   ");
                query = "select stsl_no from mst_student where order_no = '" + orderno + "' and school_no='" + schoolno[0] + "' and flag!='D'";
                rs = stmt.executeQuery(query);
                stsl = 0;
                item_total = 0;
                material_total = 0;
                gt = 0;
                if (rs.next()) {
                    stsl = rs.getInt(1);
                }
                if (stsl == 0) {
                    JOptionPane.showMessageDialog(this, "Invalid Order Number", "Info", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    query = "select SCHOOL_NO, ORDER_NO, STUDENT_NAME, CLASS_NO, DIVISION, GENDER,PHONE_N0,SHIRTH_LENGTH, SHIRTH_SHOULDER, SHIRTH_CHEST,SHIRTH_SLEEVE_LENGTH,"
                            + " SHIRTH_SLEEVE_LOOSE, SHIRTH_COLLAR, PANT_LENGTH, PANT_INSIDE, PANT_KNEE_LENGHT, PANT_KNEE_LOOSE, PANT_WAIST, PANT_SEAT,PANT_BOTTOM_LOOSE,PIN_YOK,PIN_LENGTH,PIN_WAIST,PIN_SHOULDER,"
                            + " COAT_LENGTH, COAT_SHOULDER, COAT_CHEST, COAT_WAIST, COAT_SEAT from mst_student where stsl_no = '" + stsl + "' and flag!='D'";
                    rs = stmt.executeQuery(query);
                    if (rs.next()) {
                        jtxtStudentName.setText(rs.getString(3));
                        jtxtGender.setText(rs.getString(6));
                        jtxtClass.setText(rs.getString(4));
                        jtxtDivision.setText(rs.getString(5));
                        jtxtPhone.setText(rs.getString(7));
                        jtblShirt.setValueAt(rs.getDouble(8), 0, 0);
                        jtblShirt.setValueAt(rs.getDouble(9), 0, 1);
                        jtblShirt.setValueAt(rs.getDouble(10), 0, 2);
                        jtblShirt.setValueAt(rs.getDouble(11), 0, 3);
                        jtblShirt.setValueAt(rs.getDouble(12), 0, 4);
                        jtblShirt.setValueAt(rs.getDouble(13), 0, 5);
                        jtblPant.setValueAt(rs.getDouble(14), 0, 0);
                        jtblPant.setValueAt(rs.getDouble(15), 0, 1);
                        jtblPant.setValueAt(rs.getDouble(16), 0, 2);
                        jtblPant.setValueAt(rs.getDouble(17), 0, 3);
                        jtblPant.setValueAt(rs.getDouble(18), 0, 4);
                        jtblPant.setValueAt(rs.getDouble(19), 0, 5);
                        jtblPant.setValueAt(rs.getDouble(20), 0, 6);
                        jtblSkirt.setValueAt(rs.getDouble(21), 0, 0);
                        jtblSkirt.setValueAt(rs.getDouble(22), 0, 1);
                        jtblSkirt.setValueAt(rs.getDouble(23), 0, 2);
                        jtblSkirt.setValueAt(rs.getDouble(24), 0, 3);
                        jtblCoat.setValueAt(rs.getDouble(25), 0, 0);
                        jtblCoat.setValueAt(rs.getDouble(26), 0, 1);
                        jtblCoat.setValueAt(rs.getDouble(27), 0, 2);
                        jtblCoat.setValueAt(rs.getDouble(28), 0, 3);
                        jtblCoat.setValueAt(rs.getDouble(29), 0, 4);
                        query = "select class from mst_class where class_no = '" + rs.getString("class_no") + "' and flag!='D'";
                        rs = stmt.executeQuery(query);
                        if (rs.next()) {
                            jtxtClass.setText(rs.getString("class"));
                        }
                        query = "select a.item_no,a.material_no,c.material_name,a.fixed_mat_length,b.item_name,e.selling_price,f.qty from mst_student_mat_detail a join mst_item b on a.item_no = b.item_no join mst_material c on a.material_no = c.material_no join mst_school_mat_price e on a.material_no = e.material_no and a.item_no = e.item_no join mst_student_detail f on a.stsl_no = f.stsl_no and a.item_no = f.item_no where a.stsl_no =  '" + stsl + "' and e.school_no = '" + schoolno[0] + "' and a.flag!='D' and b.flag!='D' and c.flag!='D' and e.flag!='D' and f.flag!='D'";
                        rs = stmt.executeQuery(query);
                        rowcount = jtblMaterialPurchased.getRowCount();
                        for (int i = 0; i < rowcount; i++) {
                            model1.removeRow(0);
                        }
                        while (rs.next()) {
                            model1.addRow(new Object[]{});
                            jtblMaterialPurchased.setValueAt(rs.getString(5), jtblMaterialPurchased.getRowCount() - 1, 0);
                            jtblMaterialPurchased.setValueAt(rs.getString(3), jtblMaterialPurchased.getRowCount() - 1, 1);
                            jtblMaterialPurchased.setValueAt(rs.getString(4), jtblMaterialPurchased.getRowCount() - 1, 2);
                            material_price = (rs.getFloat(6) * rs.getFloat(4)) * rs.getInt(7);
                            jtblMaterialPurchased.setValueAt(Math.round(material_price * 100.0) / 100.0, jtblMaterialPurchased.getRowCount() - 1, 3);
                            material_total = material_total + Float.parseFloat(jtblMaterialPurchased.getValueAt(jtblMaterialPurchased.getRowCount() - 1, 3).toString());
                        }
                        query = "select a.item_no,a.qty,b.item_name,d.selling_price from mst_student_detail a join mst_item b on a.item_no = b.item_no join mst_school_item_price d on a.item_no = d.item_no where a.stsl_no = '" + stsl + "' and d.school_no = '" + schoolno[0] + "' and a.flag!='D' and b.flag!='D' and d.flag!='D'";
                        rs = stmt.executeQuery(query);
                        rowcount = jtblItemQuantity.getRowCount();
                        for (int i = 0; i < rowcount; i++) {
                            model2.removeRow(0);
                        }
                        while (rs.next()) {
                            model2.addRow(new Object[]{});
                            jtblItemQuantity.setValueAt(rs.getString(3), jtblItemQuantity.getRowCount() - 1, 0);
                            jtblItemQuantity.setValueAt(rs.getString(2), jtblItemQuantity.getRowCount() - 1, 1);
                            jtblItemQuantity.setValueAt(rs.getInt(2) * rs.getInt(4), jtblItemQuantity.getRowCount() - 1, 2);
                            item_total = item_total + Float.parseFloat(jtblItemQuantity.getValueAt(jtblItemQuantity.getRowCount() - 1, 2).toString());
                        }
                        gt = material_total + item_total;
                        jtxtMaterialTotal.setText(String.valueOf(material_total));
                        jtxtItemTotal.setText(String.valueOf(item_total));
                        jtxtGrandTotal.setText(String.valueOf(gt));

                        rowcount = jtblWorkInProgress.getRowCount();
                        for (int i = 0; i < rowcount; i++) {
                            model3.removeRow(0);
                        }
                        query = "select b.cutting_master,c.item_name,a.status,a.qty,a.date_given,a.date_recieved from trn_cm a join mst_group b on a.group_no = b.group_no join mst_item c on a.item_no = c.item_no where stsl_no = '" + stsl + "' and a.flag!='D' and b.flag!='D' and c.flag!='D' order by a.group_no,a.item_no";
                        rs = stmt.executeQuery(query);
                        while (rs.next()) {
                            model3.addRow(new Object[]{});
                            jtblWorkInProgress.setValueAt("Cutting", jtblWorkInProgress.getRowCount() - 1, 0);
                            jtblWorkInProgress.setValueAt(rs.getString(1), jtblWorkInProgress.getRowCount() - 1, 1);
                            jtblWorkInProgress.setValueAt(rs.getString(2), jtblWorkInProgress.getRowCount() - 1, 2);
                            jtblWorkInProgress.setValueAt(rs.getString(3), jtblWorkInProgress.getRowCount() - 1, 3);
                            jtblWorkInProgress.setValueAt(rs.getString(4), jtblWorkInProgress.getRowCount() - 1, 4);
                            jtblWorkInProgress.setValueAt(rs.getString(5), jtblWorkInProgress.getRowCount() - 1, 5);
                            jtblWorkInProgress.setValueAt(rs.getString(6), jtblWorkInProgress.getRowCount() - 1, 6);
                        }
                        query = "select b.tailor_name,c.item_name,a.status,a.qty,a.date_given,a.date_recieved from trn_stitching a join mst_tailor b on a.tailor_no = b.tailor_no join mst_item c on a.item_no = c.item_no where a.stsl_no = '" + stsl + "' and a.flag!='D' and b.flag!='D' and c.flag!='D' order by a.tailor_no,a.item_no";
                        rs = stmt.executeQuery(query);
                        while (rs.next()) {
                            model3.addRow(new Object[]{});
                            jtblWorkInProgress.setValueAt("Stitching", jtblWorkInProgress.getRowCount() - 1, 0);
                            jtblWorkInProgress.setValueAt(rs.getString(1), jtblWorkInProgress.getRowCount() - 1, 1);
                            jtblWorkInProgress.setValueAt(rs.getString(2), jtblWorkInProgress.getRowCount() - 1, 2);
                            jtblWorkInProgress.setValueAt(rs.getString(3), jtblWorkInProgress.getRowCount() - 1, 3);
                            jtblWorkInProgress.setValueAt(rs.getString(4), jtblWorkInProgress.getRowCount() - 1, 4);
                            jtblWorkInProgress.setValueAt(rs.getString(5), jtblWorkInProgress.getRowCount() - 1, 5);
                            jtblWorkInProgress.setValueAt(rs.getString(6), jtblWorkInProgress.getRowCount() - 1, 6);
                        }
                        query = "select b.bh_master_name,c.item_name,a.status,a.qty,a.date_given,a.date_recieved from trn_buttonhole a join mst_buttonhole b on a.bh_no = b.bh_no join mst_item c on a.item_no = c.item_no where a.stsl_no = '" + stsl + "' and a.flag!='D' and b.flag!='D' and c.flag!='D' order by a.bh_no,a.item_no";
                        rs = stmt.executeQuery(query);
                        while (rs.next()) {
                            model3.addRow(new Object[]{});
                            jtblWorkInProgress.setValueAt("Buttonhole", jtblWorkInProgress.getRowCount() - 1, 0);
                            jtblWorkInProgress.setValueAt(rs.getString(1), jtblWorkInProgress.getRowCount() - 1, 1);
                            jtblWorkInProgress.setValueAt(rs.getString(2), jtblWorkInProgress.getRowCount() - 1, 2);
                            jtblWorkInProgress.setValueAt(rs.getString(3), jtblWorkInProgress.getRowCount() - 1, 3);
                            jtblWorkInProgress.setValueAt(rs.getString(4), jtblWorkInProgress.getRowCount() - 1, 4);
                            jtblWorkInProgress.setValueAt(rs.getString(5), jtblWorkInProgress.getRowCount() - 1, 5);
                            jtblWorkInProgress.setValueAt(rs.getString(6), jtblWorkInProgress.getRowCount() - 1, 6);
                        }
                        query = "select b.iron_name,c.item_name,a.status,a.qty,a.date_given,a.date_recieved  from trn_ironing a join mst_ironing b on a.iron_no = b.iron_no join mst_item c on a.item_no = c.item_no where a.stsl_no = '" + stsl + "' and a.flag!='D' and b.flag!='D' and c.flag!='D' order by a.iron_no,a.item_no";
                        rs = stmt.executeQuery(query);
                        while (rs.next()) {
                            model3.addRow(new Object[]{});
                            jtblWorkInProgress.setValueAt("Ironing", jtblWorkInProgress.getRowCount() - 1, 0);
                            jtblWorkInProgress.setValueAt(rs.getString(1), jtblWorkInProgress.getRowCount() - 1, 1);
                            jtblWorkInProgress.setValueAt(rs.getString(2), jtblWorkInProgress.getRowCount() - 1, 2);
                            jtblWorkInProgress.setValueAt(rs.getString(3), jtblWorkInProgress.getRowCount() - 1, 3);
                            jtblWorkInProgress.setValueAt(rs.getString(4), jtblWorkInProgress.getRowCount() - 1, 4);
                            jtblWorkInProgress.setValueAt(rs.getString(5), jtblWorkInProgress.getRowCount() - 1, 5);
                            jtblWorkInProgress.setValueAt(rs.getString(6), jtblWorkInProgress.getRowCount() - 1, 6);
                        }
                        pending = false;
                        for (int i = 0; i < jtblWorkInProgress.getRowCount(); i++) {
                            if (jtblWorkInProgress.getValueAt(i, 3).toString().equals("P")) {
                                pending = true;
                            }
                        }
                        if (pending) {
                            JOptionPane.showMessageDialog(this, "Some item of this student are pending!", "Pending", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            } finally {
                try {
                    if (!rs.isClosed()) {
                        rs.close();
                    }
                    if (!con.isClosed()) {
                        con.close();
                    }
                    if (!stmt.isClosed()) {
                        stmt.isClosed();
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            }
        } else {
            clear();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jtxtOrderNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtOrderNoKeyPressed
        text = "";
        text = jtxtOrderNo.getText();
        if (text.length() == 6) {
            jtxtOrderNo.setEditable(false);
            if (evt.getKeyChar() == evt.VK_BACK_SPACE || evt.getKeyChar() == evt.VK_DELETE || evt.getKeyChar() == evt.VK_LEFT || evt.getKeyChar() == evt.VK_RIGHT) {
                jtxtOrderNo.setEditable(true);
            }
        } else if (evt.getKeyChar() >= evt.VK_0 && evt.getKeyChar() <= evt.VK_9 || evt.getKeyChar() == evt.VK_BACK_SPACE || evt.getKeyChar() == evt.VK_DELETE || evt.getKeyChar() == evt.VK_LEFT || evt.getKeyChar() == evt.VK_RIGHT || evt.getKeyChar() == evt.VK_PERIOD) {
            jtxtOrderNo.setEditable(true);
        } else {
            jtxtOrderNo.setEditable(false);
        }
    }//GEN-LAST:event_jtxtOrderNoKeyPressed

    private void jbtnAddToPackingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAddToPackingActionPerformed
        if (jtxtStudentName.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Please select a student to add", "Info", JOptionPane.INFORMATION_MESSAGE);
        }else{
//        } else if (pending) {
//            JOptionPane.showMessageDialog(this, "Item not ready please check!", "Info", JOptionPane.INFORMATION_MESSAGE);
//        } else {
            try {
                con = new DBConnection().connect();
                stmt = con.createStatement();
                con.setAutoCommit(false);
                query = "select stsl_no from trn_packing_list where stsl_no = '" + stsl + "' and flag!='D'";
                rs = stmt.executeQuery(query);
                if (rs.next()) {
                    JOptionPane.showMessageDialog(this, "This order number is already in the list", "Info", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    material_total = Global.round(material_total);
                    gt = material_total + item_total;
                    diff = Global.round(gt) - gt;
                    if (diff > 0) {
                        material_total = material_total + diff;
                    }
                    gt = material_total + item_total;
                    query = "INSERT INTO trn_packing_list (STSL_NO, MATERIAL_TOTAL,ITEM_TOTAL,GRAND_TOTAL,DELIVERY_DATE,FLAG,DATE_CREATED) VALUES ('" + stsl + "', '" + material_total + "', '" + item_total + "', '" + gt + "', '" + new SimpleDateFormat("yyyy-MM-dd").format(jdtePacking.getDate()) + "', 'I', '" + today + "');";
                    System.out.println(query);
                    int i = stmt.executeUpdate(query);
                    if (i > 0) {
                        con.commit();
                        JOptionPane.showMessageDialog(this, "Update Successfull!", "Info", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            } finally {
                try {
                    if (!rs.isClosed()) {
                        rs.close();
                    }
                    if (!con.isClosed()) {
                        con.close();
                    }
                    if (!stmt.isClosed()) {
                        stmt.isClosed();
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_jbtnAddToPackingActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton jbtnAddToPacking;
    private javax.swing.JComboBox jcmbSchool;
    private com.toedter.calendar.JDateChooser jdtePacking;
    private javax.swing.JTable jtblCoat;
    private javax.swing.JTable jtblItemQuantity;
    private javax.swing.JTable jtblMaterialPurchased;
    private javax.swing.JTable jtblPant;
    private javax.swing.JTable jtblShirt;
    private javax.swing.JTable jtblSkirt;
    private javax.swing.JTable jtblWorkInProgress;
    private javax.swing.JTextField jtxtClass;
    private javax.swing.JTextField jtxtDivision;
    private javax.swing.JTextField jtxtGender;
    private javax.swing.JTextField jtxtGrandTotal;
    private javax.swing.JTextField jtxtItemTotal;
    private javax.swing.JTextField jtxtMaterialTotal;
    private javax.swing.JTextField jtxtOrderNo;
    private javax.swing.JTextField jtxtPhone;
    private javax.swing.JTextField jtxtStudentName;
    // End of variables declaration//GEN-END:variables
}
