/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package rose;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Joel
 */
public class JIFraEditExpense extends javax.swing.JInternalFrame {

    Connection con;
    Statement stmt;
    ResultSet rs;
     
    String today = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
    String query, text;
    DefaultTableModel model1;
    int rowcount = 0, slno;

    public JIFraEditExpense() {
        initComponents();
        model1 = (DefaultTableModel) jtblExpense.getModel();
        jdteDate.setDate(new Date());
        populatetable();
    }

    private void populatetable() {
        try {
            slno = 0;
            rowcount = jtblExpense.getRowCount();
            for (int i = 0; i < rowcount; i++) {
                model1.removeRow(0);
            }
            con = new DBConnection().connect();
            stmt = con.createStatement();
            query = "select sl_no,expense,amount,expense_date from mst_expense where flag!= 'D' and year(date_created)='" + Global.year + "' order by sl_no desc";
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                rowcount = jtblExpense.getRowCount();
                model1.addRow(new Object[]{""});
                jtblExpense.setValueAt(rs.getString(1), rowcount, 0);
                jtblExpense.setValueAt(rs.getString(2), rowcount, 1);
                jtblExpense.setValueAt(rs.getString(3), rowcount, 2);
                jtblExpense.setValueAt(rs.getString(4), rowcount, 3);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } finally {
            try {
                if (!rs.isClosed()) {
                    rs.close();
                }
                if (!con.isClosed()) {
                    con.close();
                }
                if (!stmt.isClosed()) {
                    stmt.isClosed();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtblExpense = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jtxtExpense = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtxtAmount = new javax.swing.JTextField();
        jdteDate = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setClosable(true);
        setTitle("Edit Expense");

        jtblExpense.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Expense", "Amount", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtblExpense);
        jtblExpense.getColumnModel().getColumn(0).setMinWidth(0);
        jtblExpense.getColumnModel().getColumn(0).setPreferredWidth(0);
        jtblExpense.getColumnModel().getColumn(0).setMaxWidth(0);
        jtblExpense.getColumnModel().getColumn(2).setMinWidth(110);
        jtblExpense.getColumnModel().getColumn(2).setPreferredWidth(110);
        jtblExpense.getColumnModel().getColumn(2).setMaxWidth(110);
        jtblExpense.getColumnModel().getColumn(3).setMinWidth(90);
        jtblExpense.getColumnModel().getColumn(3).setPreferredWidth(90);
        jtblExpense.getColumnModel().getColumn(3).setMaxWidth(90);

        jButton1.setText("Edit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Expense");

        jtxtExpense.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtExpenseKeyPressed(evt);
            }
        });

        jLabel2.setText("Amount");

        jtxtAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtAmountKeyPressed(evt);
            }
        });

        jLabel3.setText("Date");

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Save");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtExpense, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1))
                        .addGap(69, 69, 69)
                        .addComponent(jButton2))
                    .addComponent(jButton3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jdteDate, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxtExpense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jtxtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jdteDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtExpenseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtExpenseKeyPressed
        text = jtxtExpense.getText();
        if (text.length() == 30) {
            jtxtExpense.setEditable(false);
            if (evt.getKeyChar() == evt.VK_BACK_SPACE || evt.getKeyChar() == evt.VK_DELETE || evt.getKeyChar() == evt.VK_LEFT || evt.getKeyChar() == evt.VK_RIGHT) {
                jtxtExpense.setEditable(true);
            }
        } else {
            jtxtExpense.setEditable(true);
        }
    }//GEN-LAST:event_jtxtExpenseKeyPressed

    private void jtxtAmountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtAmountKeyPressed
        text = "";
        text = jtxtAmount.getText();
        if (text.length() == 9) {
            jtxtAmount.setEditable(false);
            if (evt.getKeyChar() == evt.VK_BACK_SPACE || evt.getKeyChar() == evt.VK_DELETE || evt.getKeyChar() == evt.VK_LEFT || evt.getKeyChar() == evt.VK_RIGHT) {
                jtxtAmount.setEditable(true);
            }
        } else if (evt.getKeyChar() >= evt.VK_0 && evt.getKeyChar() <= evt.VK_9 || evt.getKeyChar() == evt.VK_BACK_SPACE || evt.getKeyChar() == evt.VK_DELETE || evt.getKeyChar() == evt.VK_LEFT || evt.getKeyChar() == evt.VK_RIGHT || evt.getKeyChar() == evt.VK_PERIOD) {
            jtxtAmount.setEditable(true);
        } else {
            jtxtAmount.setEditable(false);
        }
    }//GEN-LAST:event_jtxtAmountKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jtblExpense.getSelectedRow() > -1) {
            try {
                slno = Integer.parseInt(jtblExpense.getValueAt(jtblExpense.getSelectedRow(), 0).toString());
                jtxtExpense.setText(jtblExpense.getValueAt(jtblExpense.getSelectedRow(), 1).toString());
                jtxtAmount.setText(jtblExpense.getValueAt(jtblExpense.getSelectedRow(), 2).toString());
                jdteDate.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(jtblExpense.getValueAt(jtblExpense.getSelectedRow(), 3).toString()));
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (slno == 0) {
            JOptionPane.showMessageDialog(this, "Please select a record to update", "Select", JOptionPane.INFORMATION_MESSAGE);
        } else if (jtxtExpense.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter an expense", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else if (jtxtAmount.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter an amount", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else if (jdteDate.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Please enter a date", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                con = new DBConnection().connect();
                stmt = con.createStatement();
                query = "UPDATE mst_expense SET EXPENSE='" + jtxtExpense.getText() + "', AMOUNT='" + jtxtAmount.getText() + "', EXPENSE_DATE='" + new SimpleDateFormat("yyyy-MM-dd").format(jdteDate.getDate()) + "', FLAG='U',DATE_UPDATED='" + today + "' WHERE SL_NO='" + slno + "'";
                int i = stmt.executeUpdate(query);
                if (i > 0) {
                    JOptionPane.showMessageDialog(this, "Update successfull!", "Info", JOptionPane.INFORMATION_MESSAGE);
                    slno = 0;
                    populatetable();
                    jtxtAmount.setText("");
                    jtxtExpense.setText("");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            } finally {
                try {
                    if (!con.isClosed()) {
                        con.close();
                    }
                    if (!stmt.isClosed()) {
                        stmt.isClosed();
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (slno != 0) {
            JOptionPane.showMessageDialog(this, "Please complete the update before deleting", "Select", JOptionPane.INFORMATION_MESSAGE);
        } else if (jtblExpense.getSelectedRow() > -1) {
            try {
                int b = JOptionPane.showConfirmDialog(this, "Do you want delete the record?", "Confirm", JOptionPane.YES_NO_OPTION);
                if (b == JOptionPane.YES_OPTION) {
                    slno = Integer.parseInt(jtblExpense.getValueAt(jtblExpense.getSelectedRow(), 0).toString());
                    con = new DBConnection().connect();
                    stmt = con.createStatement();
                    query = "UPDATE mst_expense SET FLAG='D',DATE_UPDATED='" + today + "' WHERE SL_NO='" + slno + "'";
                    int i = stmt.executeUpdate(query);
                    if (i > 0) {
                        JOptionPane.showMessageDialog(this, "Delete successfull!", "Info", JOptionPane.INFORMATION_MESSAGE);
                        populatetable();
                        jtxtAmount.setText("");
                        jtxtExpense.setText("");
                    }
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            } finally {
                try {
                    if (!con.isClosed()) {
                        con.close();
                    }
                    if (!stmt.isClosed()) {
                        stmt.isClosed();
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdteDate;
    private javax.swing.JTable jtblExpense;
    private javax.swing.JTextField jtxtAmount;
    private javax.swing.JTextField jtxtExpense;
    // End of variables declaration//GEN-END:variables
}
