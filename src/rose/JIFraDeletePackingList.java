/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package rose;

import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Joel
 */
public class JIFraDeletePackingList extends javax.swing.JInternalFrame {

    DefaultTableModel model;
    Connection con = null;
    ResultSet rs = null;
    Statement stmt = null;
    String query = null, dd;
    int rowcount = 0;
    String today = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
     
    String[] schoolno;

    public JIFraDeletePackingList() {
        try {
            initComponents();
            model = (DefaultTableModel) jtblPacking.getModel();
            jLabel2.setVisible(false);
            jdteNewDeliveryDate.setVisible(false);
            jBtnSave.setVisible(false);
            con = new DBConnection().connect();
            stmt = con.createStatement();
            query = "select school_no,school_name from mst_school where flag !='D'and year(date_created)='" + Global.year + "'";
            rs = stmt.executeQuery(query);
            jcmbSchool.removeAllItems();
            jcmbSchool.addItem("");
            while (rs.next()) {
                jcmbSchool.addItem(rs.getString(1) + "   " + rs.getString(2));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtblPacking = new javax.swing.JTable();
        jbtnDelete = new javax.swing.JButton();
        jBtnEdit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jdteNewDeliveryDate = new com.toedter.calendar.JDateChooser();
        jBtnSave = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jcmbSchool = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jcmbDeliveryDate = new javax.swing.JComboBox();

        setClosable(true);
        setTitle("Delete Packing List");

        jtblPacking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Order No.", "Name", "Material Total", "Item Total", "Grand Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtblPacking);
        jtblPacking.getColumnModel().getColumn(0).setMinWidth(0);
        jtblPacking.getColumnModel().getColumn(0).setPreferredWidth(0);
        jtblPacking.getColumnModel().getColumn(0).setMaxWidth(0);
        jtblPacking.getColumnModel().getColumn(1).setMinWidth(70);
        jtblPacking.getColumnModel().getColumn(1).setPreferredWidth(70);
        jtblPacking.getColumnModel().getColumn(1).setMaxWidth(70);
        jtblPacking.getColumnModel().getColumn(3).setMinWidth(80);
        jtblPacking.getColumnModel().getColumn(3).setPreferredWidth(80);
        jtblPacking.getColumnModel().getColumn(3).setMaxWidth(80);
        jtblPacking.getColumnModel().getColumn(4).setMinWidth(70);
        jtblPacking.getColumnModel().getColumn(4).setPreferredWidth(70);
        jtblPacking.getColumnModel().getColumn(4).setMaxWidth(70);
        jtblPacking.getColumnModel().getColumn(5).setMinWidth(70);
        jtblPacking.getColumnModel().getColumn(5).setPreferredWidth(70);
        jtblPacking.getColumnModel().getColumn(5).setMaxWidth(70);

        jbtnDelete.setText("Delete");
        jbtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteActionPerformed(evt);
            }
        });

        jBtnEdit.setText("Edit");
        jBtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEditActionPerformed(evt);
            }
        });

        jLabel2.setText("New Delivery Date");

        jBtnSave.setText("Save");
        jBtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSaveActionPerformed(evt);
            }
        });

        jLabel5.setText("School Name :");

        jcmbSchool.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcmbSchoolItemStateChanged(evt);
            }
        });

        jLabel3.setText("Delivery Dates");

        jcmbDeliveryDate.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcmbDeliveryDateItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcmbDeliveryDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcmbSchool, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jBtnEdit)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtnDelete)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jdteNewDeliveryDate, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtnSave)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jcmbSchool, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcmbDeliveryDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtnSave)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbtnDelete)
                            .addComponent(jBtnEdit))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jdteNewDeliveryDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void populatetable() {
        try {
            rowcount = jtblPacking.getRowCount();
            for (int i = 0; i < rowcount; i++) {
                model.removeRow(0);
            }
            con = new DBConnection().connect();
            stmt = con.createStatement();
            query = "select a.sl_no,b.order_no,b.student_name,a.material_total,a.item_total,a.grand_total from trn_packing_list a join mst_student b on a.stsl_no = b.stsl_no where a.delivery_date = '" + dd + "' and b.school_no = '" + schoolno[0] + "' and a.flag!='D' and b.flag!='D'";
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                model.addRow(new Object[]{});
                jtblPacking.setValueAt(rs.getString(1), jtblPacking.getRowCount() - 1, 0);
                jtblPacking.setValueAt(rs.getString(2), jtblPacking.getRowCount() - 1, 1);
                jtblPacking.setValueAt(rs.getString(3), jtblPacking.getRowCount() - 1, 2);
                jtblPacking.setValueAt(rs.getString(4), jtblPacking.getRowCount() - 1, 3);
                jtblPacking.setValueAt(rs.getString(5), jtblPacking.getRowCount() - 1, 4);
                jtblPacking.setValueAt(rs.getString(6), jtblPacking.getRowCount() - 1, 5);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } finally {
            try {
                if (!rs.isClosed()) {
                    rs.close();
                }
                if (!con.isClosed()) {
                    con.close();
                }
                if (!stmt.isClosed()) {
                    stmt.isClosed();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }

    }
    private void jbtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeleteActionPerformed
        try {
            if (jtblPacking.getSelectedRow() < 0) {
                JOptionPane.showMessageDialog(this, "Please select from list to delete", "Info", JOptionPane.INFORMATION_MESSAGE);
            } else {
                int b = JOptionPane.showConfirmDialog(this, "Do you want delete the item?", "Confirm", JOptionPane.YES_NO_OPTION);
                if (b == JOptionPane.YES_OPTION) {
                    con = new DBConnection().connect();
                    stmt = con.createStatement();
                    query = "update trn_packing_list set flag = 'D' where sl_no = '" + jtblPacking.getValueAt(jtblPacking.getSelectedRow(), 0) + "'";
                    int r = stmt.executeUpdate(query);
                    if (r > 0) {
                        JOptionPane.showMessageDialog(this, "Deleted Successfully!", "Info", JOptionPane.INFORMATION_MESSAGE);
                        populatetable();
                    }
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } finally {
            try {
                if (!con.isClosed()) {
                    con.close();
                }
                if (!stmt.isClosed()) {
                    stmt.isClosed();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_jbtnDeleteActionPerformed

    private void jBtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEditActionPerformed
        if (jcmbDeliveryDate.getSelectedItem() == null || jcmbDeliveryDate.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(this, "Please select delivery date to edit", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else if (jtblPacking.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid delivery date", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else {
            jLabel2.setVisible(true);
            jdteNewDeliveryDate.setVisible(true);
            jBtnSave.setVisible(true);
            jcmbDeliveryDate.getSelectedItem().equals("");
        }
    }//GEN-LAST:event_jBtnEditActionPerformed

    private void jBtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSaveActionPerformed
        try {
            if (jdteNewDeliveryDate.getDate() == null) {
                JOptionPane.showMessageDialog(this, "Please enter the new delivery date", "Info", JOptionPane.INFORMATION_MESSAGE);
            } else {
                con = new DBConnection().connect();
                con.setAutoCommit(false);
                stmt = con.createStatement();
                int[] i;
                for (int j = 0; j < jtblPacking.getRowCount(); j++) {
                    query = "update trn_packing_list set delivery_date = '" + new SimpleDateFormat("yyyy-MM-dd").format(jdteNewDeliveryDate.getDate()) + "',date_updated = '" + today + "' where delivery_date = '" + dd + "' and flag!='D' and sl_no = '" + jtblPacking.getValueAt(j, 0) + "'";
                    System.out.println(query);
                    stmt.addBatch(query);
                }
                i = stmt.executeBatch();
                con.commit();
                if (i.length > 0) {
                    JOptionPane.showMessageDialog(this, "Update successfull!", "Info", JOptionPane.INFORMATION_MESSAGE);
                    jLabel2.setVisible(false);
                    jdteNewDeliveryDate.setVisible(false);
                    jBtnSave.setVisible(false);
                    jcmbSchool.setSelectedItem("");
                    jcmbDeliveryDate.setSelectedItem("");
                    rowcount = jtblPacking.getRowCount();
                    for (int k = 0; k < rowcount; k++) {
                        model.removeRow(0);
                    }
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } finally {
            try {
                if (!con.isClosed()) {
                    con.close();
                }
                if (!stmt.isClosed()) {
                    stmt.isClosed();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_jBtnSaveActionPerformed

    private void jcmbSchoolItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcmbSchoolItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (jcmbSchool.getSelectedItem() == null || jcmbSchool.getSelectedItem().equals("")) {
                jcmbDeliveryDate.removeAllItems();
            } else {
                try {
                    con = new DBConnection().connect();
                    stmt = con.createStatement();
                    schoolno = jcmbSchool.getSelectedItem().toString().split("   ");
                    query = "select DISTINCT(a.delivery_date) from trn_packing_list a join mst_student b on a.stsl_no = b.stsl_no where b.school_no = '" + schoolno[0] + "' and a.flag!='D' and b.flag!='D'";
                    rs = stmt.executeQuery(query);
                    jcmbDeliveryDate.removeAllItems();
                    jcmbDeliveryDate.addItem("");
                    while (rs.next()) {
                        jcmbDeliveryDate.addItem(rs.getString(1));
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                } finally {
                    try {
                        if (!rs.isClosed()) {
                            rs.close();
                        }
                        if (!con.isClosed()) {
                            con.close();
                        }
                        if (!stmt.isClosed()) {
                            stmt.isClosed();
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    }
                }
            }
        }
    }//GEN-LAST:event_jcmbSchoolItemStateChanged

    private void jcmbDeliveryDateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcmbDeliveryDateItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (jcmbDeliveryDate.getSelectedItem() == null || jcmbDeliveryDate.getSelectedItem().equals("")) {
            } else {
                if (jcmbSchool.getSelectedItem() == null || jcmbSchool.getSelectedItem().equals("")) {
                    JOptionPane.showMessageDialog(this, "Please select a school", "Info", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    try {
                        dd = jcmbDeliveryDate.getSelectedItem().toString();
                        con = new DBConnection().connect();
                        stmt = con.createStatement();
                        query = "select a.stsl_no from trn_packing_list a join mst_student b on a.stsl_no = b.stsl_no where a.delivery_date = '" + dd + "' and b.school_no = '" + schoolno[0] + "' and a.flag!='D' and b.flag!='D'";
                        rs = stmt.executeQuery(query);
                        if (rs.next()) {
                            populatetable();
                        } else {
                            JOptionPane.showMessageDialog(this, "No packing list exist for this delivery date", "Info", JOptionPane.INFORMATION_MESSAGE);
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    } finally {
                        try {
                            if (!rs.isClosed()) {
                                rs.close();
                            }
                            if (!con.isClosed()) {
                                con.close();
                            }
                            if (!stmt.isClosed()) {
                                stmt.isClosed();
                            }
                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(this, ex.getMessage());
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_jcmbDeliveryDateItemStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnEdit;
    private javax.swing.JButton jBtnSave;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnDelete;
    private javax.swing.JComboBox jcmbDeliveryDate;
    private javax.swing.JComboBox jcmbSchool;
    private com.toedter.calendar.JDateChooser jdteNewDeliveryDate;
    private javax.swing.JTable jtblPacking;
    // End of variables declaration//GEN-END:variables
}
