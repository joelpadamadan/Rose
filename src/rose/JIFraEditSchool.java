/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package rose;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Joel
 */
public class JIFraEditSchool extends javax.swing.JInternalFrame {

    Connection con = null;
    DefaultTableModel model1;
    ResultSet rs = null;
    Statement stmt = null;
    PreparedStatement pstmt = null;
    String query, text;
    int rowcount, school_no;
     

    public JIFraEditSchool() {
        initComponents();
        school_no = 0;
        model1 = (DefaultTableModel) jtblSchool.getModel();
        populatetable();
    }

    private void populatetable() {
        try {
            rowcount = jtblSchool.getRowCount();
            for (int i = 0; i < rowcount; i++) {
                model1.removeRow(0);
            }
            school_no = 0;
            con = new DBConnection().connect();
            stmt = con.createStatement();
            query = "select school_no,school_name,school_address,school_phoneno from mst_school where flag!='D' and year(date_created)='" + Global.year + "' ";
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                rowcount = jtblSchool.getRowCount();
                model1.addRow(new Object[]{""});
                jtblSchool.setValueAt(rs.getString(1), rowcount, 0);
                jtblSchool.setValueAt(rs.getString(2), rowcount, 1);
                jtblSchool.setValueAt(rs.getString(3), rowcount, 2);
                jtblSchool.setValueAt(rs.getString(4), rowcount, 3);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } finally {
            try {
                if (!rs.isClosed()) {
                    rs.close();
                }
                if (!con.isClosed()) {
                    con.close();
                }
                if (!stmt.isClosed()) {
                    stmt.isClosed();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblSchool = new javax.swing.JTable();
        jbtnEdit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jtxtSchool = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtxtAddress = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jtxtPhoneNo = new javax.swing.JTextField();
        jbtnSave = new javax.swing.JButton();
        jbtnDelete = new javax.swing.JButton();

        setClosable(true);
        setTitle("Edit School");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jtblSchool.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "School", "Address", "Phone No."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtblSchool);
        jtblSchool.getColumnModel().getColumn(0).setMinWidth(0);
        jtblSchool.getColumnModel().getColumn(0).setPreferredWidth(0);
        jtblSchool.getColumnModel().getColumn(0).setMaxWidth(0);
        jtblSchool.getColumnModel().getColumn(1).setMinWidth(125);
        jtblSchool.getColumnModel().getColumn(1).setPreferredWidth(125);
        jtblSchool.getColumnModel().getColumn(1).setMaxWidth(125);
        jtblSchool.getColumnModel().getColumn(3).setMinWidth(150);
        jtblSchool.getColumnModel().getColumn(3).setPreferredWidth(150);
        jtblSchool.getColumnModel().getColumn(3).setMaxWidth(150);

        jbtnEdit.setText("Edit");
        jbtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEditActionPerformed(evt);
            }
        });

        jLabel1.setText("School");

        jtxtSchool.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtSchoolKeyPressed(evt);
            }
        });

        jLabel2.setText("Address");

        jtxtAddress.setColumns(20);
        jtxtAddress.setRows(5);
        jtxtAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtAddressKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jtxtAddress);

        jLabel3.setText("Phone No.");

        jtxtPhoneNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtPhoneNoKeyPressed(evt);
            }
        });

        jbtnSave.setText("Save");
        jbtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSaveActionPerformed(evt);
            }
        });

        jbtnDelete.setText("Delete");
        jbtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jbtnEdit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbtnDelete))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(jbtnSave))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtxtSchool, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(jLabel2))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtxtPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 70, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnEdit)
                    .addComponent(jbtnDelete))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(jbtnSave))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jtxtSchool, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jtxtPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtSchoolKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtSchoolKeyPressed
        text = jtxtSchool.getText();
        if (text.length() == 40) {
            jtxtSchool.setEditable(false);
            if (evt.getKeyChar() == evt.VK_BACK_SPACE || evt.getKeyChar() == evt.VK_DELETE || evt.getKeyChar() == evt.VK_LEFT || evt.getKeyChar() == evt.VK_RIGHT) {
                jtxtSchool.setEditable(true);
            }
        } else {
            jtxtSchool.setEditable(true);
        }
    }//GEN-LAST:event_jtxtSchoolKeyPressed

    private void jtxtAddressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtAddressKeyPressed
        text = jtxtAddress.getText();
        if (text.length() == 50) {
            jtxtAddress.setEditable(false);
            if (evt.getKeyChar() == evt.VK_BACK_SPACE || evt.getKeyChar() == evt.VK_DELETE || evt.getKeyChar() == evt.VK_LEFT || evt.getKeyChar() == evt.VK_RIGHT) {
                jtxtAddress.setEditable(true);
            }
        } else {
            jtxtAddress.setEditable(true);
        }
    }//GEN-LAST:event_jtxtAddressKeyPressed

    private void jtxtPhoneNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtPhoneNoKeyPressed
        text = jtxtPhoneNo.getText();
        if (text.length() == 12) {
            jtxtPhoneNo.setEditable(false);
            if (evt.getKeyChar() == evt.VK_BACK_SPACE || evt.getKeyChar() == evt.VK_DELETE || evt.getKeyChar() == evt.VK_LEFT || evt.getKeyChar() == evt.VK_RIGHT) {
                jtxtPhoneNo.setEditable(true);
            }
        } else {
            jtxtPhoneNo.setEditable(true);
        }
    }//GEN-LAST:event_jtxtPhoneNoKeyPressed

    private void jbtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEditActionPerformed
        if (jtblSchool.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a school from the table to edit", "Select", JOptionPane.INFORMATION_MESSAGE);
        } else {
            school_no = Integer.parseInt(jtblSchool.getValueAt(jtblSchool.getSelectedRow(), 0).toString());
            jtxtSchool.setText(jtblSchool.getValueAt(jtblSchool.getSelectedRow(), 1).toString());
            jtxtAddress.setText(jtblSchool.getValueAt(jtblSchool.getSelectedRow(), 2).toString());
            jtxtPhoneNo.setText(jtblSchool.getValueAt(jtblSchool.getSelectedRow(), 3).toString());
        }
    }//GEN-LAST:event_jbtnEditActionPerformed

    private void jbtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeleteActionPerformed
        if (school_no != 0) {
            JOptionPane.showMessageDialog(this, "Please complete the update before deleting", "Select", JOptionPane.INFORMATION_MESSAGE);
        } else if (jtblSchool.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a school from the table to delete", "Select", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int b = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete the selected school?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (b == JOptionPane.YES_OPTION) {
                try {
                    school_no = Integer.parseInt(jtblSchool.getValueAt(jtblSchool.getSelectedRow(), 0).toString());
                    con = new DBConnection().connect();
                    con.setAutoCommit(false);
                    query = "update mst_school set flag= ? where school_no = ?";
                    pstmt = con.prepareStatement(query);
                    pstmt.setString(1, "D");
                    pstmt.setInt(2, school_no);
                    int i = pstmt.executeUpdate();
                    if (i > 0) {
                        JOptionPane.showMessageDialog(this, "Deleted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                        con.commit();
                        populatetable();
                        jtxtAddress.setText("");
                        jtxtPhoneNo.setText("");
                        jtxtSchool.setText("");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                } finally {
                    try {
                        if (!con.isClosed()) {
                            con.close();
                        }
                        if (!pstmt.isClosed()) {
                            pstmt.isClosed();
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    }
                }
            }
        }
    }//GEN-LAST:event_jbtnDeleteActionPerformed

    private void jbtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSaveActionPerformed
         if (school_no == 0) {
            JOptionPane.showMessageDialog(this, "Please select a record to update", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else if (jtxtSchool.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter a school name", "Incomplete", JOptionPane.INFORMATION_MESSAGE);
        } else if (jtxtAddress.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter a school address", "Incomplete", JOptionPane.INFORMATION_MESSAGE);
        } else if (jtxtPhoneNo.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter a school phone number", "Incomplete", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                con = new DBConnection().connect();
                con.setAutoCommit(false);
                query = "update mst_school set school_name= ? ,school_address = ? ,school_phoneno = ? where school_no = ? ";
                pstmt = con.prepareStatement(query);
                pstmt.setString(1, jtxtSchool.getText().trim());
                pstmt.setString(2, jtxtAddress.getText().trim());
                pstmt.setString(3, jtxtPhoneNo.getText().trim());
                pstmt.setInt(4, school_no);
                int i = pstmt.executeUpdate();
                if (i > 0) {
                    JOptionPane.showMessageDialog(this, "Updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    con.commit();
                    jtxtAddress.setText("");
                    jtxtPhoneNo.setText("");
                    jtxtSchool.setText("");
                    populatetable();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            } finally {
                try {
                    if (!con.isClosed()) {
                        con.close();
                    }
                    if (!pstmt.isClosed()) {
                        pstmt.isClosed();
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_jbtnSaveActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnDelete;
    private javax.swing.JButton jbtnEdit;
    private javax.swing.JButton jbtnSave;
    private javax.swing.JTable jtblSchool;
    private javax.swing.JTextArea jtxtAddress;
    private javax.swing.JTextField jtxtPhoneNo;
    private javax.swing.JTextField jtxtSchool;
    // End of variables declaration//GEN-END:variables
}
