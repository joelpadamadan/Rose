/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package rose;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Joel
 */
public class JIFraEditStandardOrder extends javax.swing.JInternalFrame {

    /**
     * Creates new form jIFraCuttingMasterDetails
     */
    String text;
    DefaultTableModel model1;
    Connection con = null;
    ResultSet rs = null;
    Statement stmt = null;
    String query = null;
    int rowcount = 0;
    String set_no, school_no;
     

    public JIFraEditStandardOrder() {
        initComponents();
        model1 = (DefaultTableModel) jtblStandardOrder.getModel();
        populatetable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtblStandardOrder = new javax.swing.JTable();
        jbtnSubmit = new javax.swing.JButton();

        setClosable(true);
        setTitle("Edit Standard Order");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jtblStandardOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "slno", "School", "Set", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtblStandardOrder);
        jtblStandardOrder.getColumnModel().getColumn(0).setMinWidth(0);
        jtblStandardOrder.getColumnModel().getColumn(0).setPreferredWidth(0);
        jtblStandardOrder.getColumnModel().getColumn(0).setMaxWidth(0);
        jtblStandardOrder.getColumnModel().getColumn(3).setMaxWidth(75);

        jbtnSubmit.setText("Delete");
        jbtnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnSubmit))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnSubmit)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void populatetable() {
        try {
            rowcount = 0;
            con = new DBConnection().connect();
            stmt = con.createStatement();            
            rowcount = jtblStandardOrder.getRowCount();
            for (int i = 0; i < rowcount; i++) {
                model1.removeRow(0);
            }
            query = "select a.sl_no,b.school_name,c.set_name,a.qty from mst_standard_order a join mst_school b on a.school_no = b.school_no join mst_set c on a.set_no = c.set_no where a.flag!='D' and b.flag!='D' and c.flag!='D' and year(a.date_created)='" + Global.year + "'";
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                rowcount = jtblStandardOrder.getRowCount();
                model1.addRow(new Object[]{""});
                jtblStandardOrder.setValueAt(rs.getString(1), rowcount, 0);
                jtblStandardOrder.setValueAt(rs.getString(2), rowcount, 1);
                jtblStandardOrder.setValueAt(rs.getString(3), rowcount, 2);
                jtblStandardOrder.setValueAt(rs.getString(4), rowcount, 3);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } finally {
            try {
                if (!rs.isClosed()) {
                    rs.close();
                }
                if (!con.isClosed()) {
                    con.close();
                }
                if (!stmt.isClosed()) {
                    stmt.isClosed();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }

    }
    private void jbtnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSubmitActionPerformed
        try {
            if (jtblStandardOrder.getSelectedRow()<0) {
                JOptionPane.showMessageDialog(this, "Please select select a record to delete", "Info", JOptionPane.INFORMATION_MESSAGE);
            } else{
                int i = 0;
                con = new DBConnection().connect();
                con.setAutoCommit(false);
                stmt = con.createStatement();              
                query = "delete from mst_standard_order where sl_no = '"+jtblStandardOrder.getValueAt(jtblStandardOrder.getSelectedRow(), 0)+"'";
                i = stmt.executeUpdate(query);
                if (i > 0) {
                    con.commit();
                    JOptionPane.showMessageDialog(this, "Deleted Successfully", "Info", JOptionPane.INFORMATION_MESSAGE);                    
                    populatetable();
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } finally {
            try {
                if (!rs.isClosed()) {
                    rs.close();
                }
                if (!con.isClosed()) {
                    con.close();
                }
                if (!stmt.isClosed()) {
                    stmt.isClosed();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_jbtnSubmitActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnSubmit;
    private javax.swing.JTable jtblStandardOrder;
    // End of variables declaration//GEN-END:variables
}
