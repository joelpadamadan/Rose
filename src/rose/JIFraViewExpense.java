/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package rose;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Joel
 */
public class JIFraViewExpense extends javax.swing.JInternalFrame {

    Connection con;
    Statement stmt;
    ResultSet rs;
     
    String today = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
    String query, text, slno;
    DefaultTableModel model1;
    int rowcount = 0;

    public JIFraViewExpense() {
        initComponents();
        model1 = (DefaultTableModel) jtblExpense.getModel();
        jdteFrom.setDate(new Date());
        jdteTo.setDate(new Date());
    }

    private void populatetable(Date from, Date to) {
        try {
            rowcount = jtblExpense.getRowCount();
            for (int i = 0; i < rowcount; i++) {
                model1.removeRow(0);
            }
            con = new DBConnection().connect();
            stmt = con.createStatement();
            query = "select sl_no,expense,amount,expense_date from mst_expense where expense_date between '" + new SimpleDateFormat("yyyy-MM-dd").format(from) + "' and '" + new SimpleDateFormat("yyyy-MM-dd").format(to) + "' and flag!= 'D' order by sl_no";
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                rowcount = jtblExpense.getRowCount();
                model1.addRow(new Object[]{""});
                jtblExpense.setValueAt(rs.getString(1), rowcount, 0);
                jtblExpense.setValueAt(rs.getString(2), rowcount, 1);
                jtblExpense.setValueAt(rs.getString(3), rowcount, 2);
                jtblExpense.setValueAt(rs.getString(4), rowcount, 3);
            }
            query = "select a.sl_no,b.cutting_master,a.labour_type,a.amount,a.date_given from mst_wage_advance a join mst_group b on a.labour_no = b.group_no  where a.date_given between '" + new SimpleDateFormat("yyyy-MM-dd").format(from) + "' and '" + new SimpleDateFormat("yyyy-MM-dd").format(to) + "' and a.labour_type= 'Cutting' and a.flag!='D' and b.flag!='D' order by a.sl_no desc";
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                rowcount = jtblExpense.getRowCount();
                model1.addRow(new Object[]{""});
                jtblExpense.setValueAt(rs.getString(1), rowcount, 0);
                jtblExpense.setValueAt(rs.getString(2) + " - " + rs.getString(3) + " (Advance)", rowcount, 1);
                jtblExpense.setValueAt(rs.getString(4), rowcount, 2);
                jtblExpense.setValueAt(rs.getString(5), rowcount, 3);
            }

            query = "select a.sl_no,b.tailor_name,a.labour_type,a.amount,a.date_given from mst_wage_advance a join mst_tailor b on a.labour_no = b.tailor_no  where a.date_given between '" + new SimpleDateFormat("yyyy-MM-dd").format(from) + "' and '" + new SimpleDateFormat("yyyy-MM-dd").format(to) + "' and a.labour_type= 'Stitching' and a.flag!='D' and b.flag!='D' order by a.sl_no desc";
            rs = stmt.executeQuery(query);
            while (rs.next()) {
                rowcount = jtblExpense.getRowCount();
                model1.addRow(new Object[]{""});
                jtblExpense.setValueAt(rs.getString(1), rowcount, 0);
                jtblExpense.setValueAt(rs.getString(2) + " - " + rs.getString(3) + " (Advance)", rowcount, 1);
                jtblExpense.setValueAt(rs.getString(4), rowcount, 2);
                jtblExpense.setValueAt(rs.getString(5), rowcount, 3);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } finally {
            try {
                if (!rs.isClosed()) {
                    rs.close();
                }
                if (!con.isClosed()) {
                    con.close();
                }
                if (!stmt.isClosed()) {
                    stmt.isClosed();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtblExpense = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jdteFrom = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jdteTo = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setTitle("View Expense");

        jtblExpense.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Expense", "Amount", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtblExpense);
        jtblExpense.getColumnModel().getColumn(0).setMinWidth(0);
        jtblExpense.getColumnModel().getColumn(0).setPreferredWidth(0);
        jtblExpense.getColumnModel().getColumn(0).setMaxWidth(0);
        jtblExpense.getColumnModel().getColumn(2).setMinWidth(110);
        jtblExpense.getColumnModel().getColumn(2).setPreferredWidth(110);
        jtblExpense.getColumnModel().getColumn(2).setMaxWidth(110);
        jtblExpense.getColumnModel().getColumn(3).setMinWidth(90);
        jtblExpense.getColumnModel().getColumn(3).setPreferredWidth(90);
        jtblExpense.getColumnModel().getColumn(3).setMaxWidth(90);

        jLabel1.setText("From Date");

        jLabel2.setText("To Date");

        jButton1.setText("View");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jdteFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jdteTo, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jdteFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jdteTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        populatetable(jdteFrom.getDate(), jdteTo.getDate());
    }//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdteFrom;
    private com.toedter.calendar.JDateChooser jdteTo;
    private javax.swing.JTable jtblExpense;
    // End of variables declaration//GEN-END:variables
}
